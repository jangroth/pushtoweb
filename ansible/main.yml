---
- hosts: localhost
  gather_facts: False
  connection: local

  tasks:
    - name: Debug
      debug:
        msg: "Building environment '{{env.name}}'"

    - name: Create bucket for lambda
      s3_bucket:
        region: "{{ region }}"
        name: "{{ env.name }}-push-to-web-lambda-code-bucket"
      register: task_output

    - name: Register bucket name
      set_fact:
        lambda_code_bucket: "{{ task_output['name'] }}"

    - name: Package lambda
      archive:
        path: "{{ dirs.code }}/{{ lambda.source }}"
        dest: "{{ dirs.build }}/{{ lambda.zip }}"
        format: zip

    - name: Get checksum
      stat:
        path: "{{ dirs.build }}/{{ lambda.zip }}"
      register: task_output

    - name: Register lambda name
      set_fact:
        lambda_name: "{{ lambda.zip }}-{{ task_output.stat.checksum}}"

    - name: List keys simple
      aws_s3:
        region: "{{ region }}"
        bucket:  "{{ lambda_code_bucket }}"
        object: "{{ lambda_name }}"
        mode: list
      register: task_output

    - name: Debug
      debug:
        msg: "Lambda already exists, skipping upload..."
      when: "lambda_name in task_output.s3_keys"

    - name: Upload lambda to {{ lambda_code_bucket }}
      aws_s3:
        region: "{{ region }}"
        bucket: "{{ lambda_code_bucket }}"
        object: "{{ lambda_name }}"
        src: "{{ dirs.build }}/{{ lambda.zip }}"
        mode: put
      when: "lambda_name not in task_output.s3_keys"

    - name: "Deploy stack"
      cloudformation:
        stack_name: "{{env.name}}-push-to-web"
        template: "cfn/web-infra.yaml"
        template_parameters:
          LambdaCodeBucket: "{{ lambda_code_bucket }}"
          LambdaName: "{{ lambda_name }}"
          RepoUrl: "{{ repo.url }}"
        state: present
