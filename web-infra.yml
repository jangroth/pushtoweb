---
AWSTemplateFormatVersion: '2010-09-09'

Description:
  An S3 bucket configured to serve a git repository as a static website.

Parameters:
  RepoUrl:
    Type: String
    Description: URL of repository to clone from

Resources:

  WebsiteBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  PushToBucketLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Runtime: 'python3.6'
      Handler: 'pushtobucket.handler'
      Role:
        !GetAtt 'PushToBucketLambdaRole.Arn'
      Code:
        S3Bucket: !ImportValue 'ptw-code-codebucket'
        S3Key: 'pushtobucket.zip'
        S3ObjectVersion: '3EmvsCe11qL0si7IIYtKVn6wO.x3QCHO'
      Environment:
        Variables:
          WEBSITE_BUCKET: !Ref WebsiteBucket
          REPO_URL: !Ref RepoUrl
      Timeout: '25'
#      TracingConfig:
#        Mode: 'Active'

  TriggerPushToBucketTopic: 
    Type: 'AWS::SNS::Topic'
    Properties: 
      Subscription: 
        - 
          Endpoint: 
            !GetAtt 'PushToBucketLambda.Arn'
          Protocol: 'lambda'
      TopicName: 'triggerpushtobuckettopic' 

  WebsiteBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: WebsiteBucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${WebsiteBucket}/*'
      Bucket: !Ref WebsiteBucket

  PushToBucketLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - 
          PolicyName: pushtobucketpolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource: !Sub 'arn:aws:s3:::${WebsiteBucket}/*'
              - 
                Effect: Allow
                Action:
                  - logs:*
                Resource: 'arn:aws:logs:*:*:*'
  
  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: 'sns.amazonaws.com'
      SourceArn: !Ref TriggerPushToBucketTopic
      FunctionName: !GetAtt 'PushToBucketLambda.Arn'


Outputs:
  WebsiteURL:
    Value:
      !GetAtt 'WebsiteBucket.WebsiteURL'
